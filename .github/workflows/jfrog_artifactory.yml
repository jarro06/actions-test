# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Upload artifact to Jfrog Artifactory

# events on which trigger workflow
# https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

# job is a chain of actions
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
#     every action is github repo, checkout: https://github.com/actions/checkout/blob/main/action.yml
    - uses: actions/checkout@v2
    - uses: jfrog/setup-jfrog-cli@v2
    - run: |
        jf c add kermit --artifactory-url=${{ secrets.JF_ARTIFACTORY_SERVER_URL }} --access-token=${{ secrets.JF_ACCSESS_TOKEN }}
        jf rt ping

#    - name: Set up JDK 17
#      uses: actions/setup-java@v2
#      with:
#        java-version: '17'
#        distribution: 'temurin'
#
## for maven project we will need different steps
#    - name: Add permission to gradle
#      run:  chmod +x gradlew
#
#    - name: Build project
#      continue-on-error: true
#      run: ./gradlew build
